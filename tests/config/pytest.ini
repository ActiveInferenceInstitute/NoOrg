[pytest]
# Test discovery and execution
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Asyncio settings
asyncio_mode = auto
asyncio_default_fixture_loop_scope = session

# Test categories markers
markers =
    unit: Unit tests
    integration: Integration tests
    system: System tests
    performance: Performance tests
    benchmark: Benchmark tests
    smoke: Smoke tests
    regression: Regression tests
    security: Security tests
    reliability: Reliability tests
    stress: Stress tests
    recovery: Recovery tests
    cleanup: Cleanup tests

# Timeout settings
timeout = 300
timeout_method = thread

# Reporting settings
console_output_style = progress
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage settings
addopts = 
    --cov=agents 
    --cov-report=term-missing 
    --cov-report=html 
    --cov-branch
    --no-cov-on-fail
    --verbose

# Test ordering
randomly_seed = 123456
randomly_dont_reorganize = true

# Environment variables
env =
    PYTHONPATH=.
    PYTHONUNBUFFERED=1
    PYTHONHASHSEED=random
    TEST_ENV=test

# Benchmark settings
benchmark_min_rounds = 5
benchmark_min_time = 0.000005
benchmark_max_time = 1.0
benchmark_calibration_precision = 10

# Disable specific warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::pytest.PytestUnknownMarkWarning 